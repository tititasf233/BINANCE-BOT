apiVersion: apps/v1
kind: Deployment
metadata:
  name: aura-backend
  namespace: aura-trading
  labels:
    app: aura-backend
    component: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: aura-backend
  template:
    metadata:
      labels:
        app: aura-backend
        component: backend
    spec:
      containers:
      - name: backend
        image: aura/backend:latest
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: aura-config
        - secretRef:
            name: aura-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /var/log/aura
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: logs
        emptyDir: {}
      - name: config
        configMap:
          name: aura-config
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command:
        - sh
        - -c
        - |
          until pg_isready -h postgres-service -p 5432 -U postgres; do
            echo "Waiting for postgres..."
            sleep 2
          done
      - name: wait-for-redis
        image: redis:7-alpine
        command:
        - sh
        - -c
        - |
          until redis-cli -h redis-service -p 6379 ping; do
            echo "Waiting for redis..."
            sleep 2
          done
      - name: migrate-database
        image: aura/backend:latest
        command:
        - node
        - dist/scripts/migrate.js
        envFrom:
        - configMapRef:
            name: aura-config
        - secretRef:
            name: aura-secrets

---
apiVersion: v1
kind: Service
metadata:
  name: aura-backend-service
  namespace: aura-trading
  labels:
    app: aura-backend
spec:
  selector:
    app: aura-backend
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: aura-backend-hpa
  namespace: aura-trading
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: aura-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60