# Multi-stage build para o frontend
FROM node:18-alpine AS builder

# Definir diretório de trabalho
WORKDIR /app

# Copiar arquivos de dependências
COPY frontend/package*.json ./

# Instalar dependências
RUN npm ci && npm cache clean --force

# Copiar código fonte
COPY frontend/ ./

# Build da aplicação
RUN npm run build

# Stage de produção com nginx
FROM nginx:alpine AS production

# Instalar dependências
RUN apk add --no-cache curl

# Copiar build do React
COPY --from=builder /app/build /usr/share/nginx/html

# Copiar configuração customizada do nginx
COPY nginx.conf /etc/nginx/nginx.conf
COPY nginx-default.conf /etc/nginx/conf.d/default.conf

# Criar usuário não-root
RUN addgroup -g 1001 -S aura \
    && adduser -S aura -u 1001 \
    && chown -R aura:aura /usr/share/nginx/html \
    && chown -R aura:aura /var/cache/nginx \
    && chown -R aura:aura /var/log/nginx \
    && chown -R aura:aura /etc/nginx/conf.d \
    && touch /var/run/nginx.pid \
    && chown -R aura:aura /var/run/nginx.pid

# Mudar para usuário não-root
USER aura

# Expor porta
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Comando de inicialização
CMD ["nginx", "-g", "daemon off;"]